/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
package org.apache.airavata.datalake.drms.sharing;

import "google/api/annotations.proto";
import "Common.proto";
import "google/protobuf/empty.proto";


message ShareEntityWithUserRequest {
    org.apache.airavata.datalake.drms.DRMSServiceAuthToken auth_token = 1;
    string client_id = 2;
    string entity_id = 3;
    string permission_id = 4;
    string shared_user_id = 5;
}


message ShareEntityWithGroupRequest {
    org.apache.airavata.datalake.drms.DRMSServiceAuthToken auth_token = 1;
    string client_id = 2;
    string entity_id = 3;
    string permission_id = 4;
    string shared_group_id = 5;
}


message RevokeEntityWithUserRequest {
    org.apache.airavata.datalake.drms.DRMSServiceAuthToken auth_token = 1;
    string entity_id = 2;
    string permission_id = 3;
    string revoked_user_id = 4;

}


message RevokeEntityFromGroupRequest {
    org.apache.airavata.datalake.drms.DRMSServiceAuthToken auth_token = 1;
    string entity_id = 2;
    string permission_id = 3;
    string revoked_group_id = 4;

}


service DRMSSharingService {

    rpc shareEntityWithUser (ShareEntityWithUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
      post: "/v1.0/api/drms/users/share"
    };
    }

    rpc shareEntityWithGroup (ShareEntityWithGroupRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
      post: "/v1.0/api/drms/groups/share"
    };
    }

    rpc revokeEntitySharingFromUser (RevokeEntityWithUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
      delete: "/v1.0/api/drms/users/share"
    };
    }

    rpc revokeEntitySharingFromGroup (RevokeEntityFromGroupRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
      delete: "/v1.0/api/drms/groups/share"
    };
    }

}