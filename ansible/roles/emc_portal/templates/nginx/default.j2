server {

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root {{ emc_portal_source_dir }}/dist;
    index index.html;
    location ~ ^/(css|js)/ {
        # These assets include a digest in the filename, so they will never change
        expires 5m;
    }
    location ~* ^.+\.(html|htm)$ {
        # Very short caching time to ensure changes are immediately recognized
        expires 5m;
    }

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /resource-images/ {
        root {{ emc_portal_source_dir }};
        try_files $uri $uri/ =404;
        expires max;
    }


	# Add index.php to the list if you are using PHP
	# index index.html index.htm index.nginx-debian.html;
    server_name {{ emc_portal_host }}; # managed by Certbot

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}


    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/{{ emc_portal_host }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ emc_portal_host }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = {{ emc_portal_host }}) {
        return 301 https://{{ emc_portal_host }}/$request_uri;
    } # managed by Certbot

	listen 80 ;
	listen [::]:80 ;
    server_name {{ emc_portal_host }};
    return 404; # managed by Certbot
}
