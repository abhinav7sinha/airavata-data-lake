/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
package org.apache.airavata.datalake.orchestrator.workflow.engine;

import "google/api/annotations.proto";
import "Common.proto";
import "google/protobuf/empty.proto";

message WorkflowMessage {
    string message_id = 1;
    string resource_id = 2;
}

message WorkflowInvocationRequest {
    org.apache.airavata.datalake.orchestrator.workflow.WorkflowServiceAuthToken auth_token = 1;
    WorkflowMessage message = 2;
}

message WorkflowInvocationResponse {
    bool status = 1;
}

message MFTCallbackGetRequest {
    string mftTransferId = 1;
}

message MFTCallbackGetResponse {
    string mftTransferId = 1;
    int32 prevSectionIndex = 2;
    string workflowId = 3;
    string taskId = 4;
}

message MFTCallbacSaveRequest {
    string mftTransferId = 1;
    int32 prevSectionIndex = 2;
    string workflowId = 3;
    string taskId = 4;
}

service WorkflowService {

    rpc invokeWorkflow (WorkflowInvocationRequest) returns (WorkflowInvocationResponse);
    rpc getMFTCallback(MFTCallbackGetRequest) returns (MFTCallbackGetResponse);
    rpc saveMFTCallback(MFTCallbacSaveRequest) returns (google.protobuf.Empty);
}