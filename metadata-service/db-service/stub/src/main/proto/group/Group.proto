syntax = "proto3";

option java_multiple_files = true;
package org.apache.airavata.datalake.metadata.service;

import "google/api/annotations.proto";
import "common/Common.proto";
import "user/User.proto";

message GroupMetadataAPIRequest {
    Group group = 1;
    MetadataServiceAuthToken auth_token = 2;
    string source = 3;
}

message GroupMembershipAPIRequest {
    repeated GroupMembership memberships = 1;
    MetadataServiceAuthToken auth_token = 2;
    string source = 3;
}

message GroupMetadataAPIResponse {
    bool status = 1;
}


message Group {
    string tenant_id = 1;
    string name = 2;
    string description = 3;
    map<string, string> properties = 4;
    repeated Group child_groups = 5;
    string parent_group_id = 6;
    int64 created_at = 9;
    int64 last_modified_at = 10;
    repeated GroupMembership group_membership = 11;
}

message GroupMembership {
    string user_id = 1;
    User user = 2;
    string group_id = 3;
    string membership_type = 4;
    map<string, string> properties = 5;
    int64 created_at = 6;
    int64 last_modified_at = 7;
}


service GroupMetadataService {

    rpc createGroup (GroupMetadataAPIRequest) returns (GroupMetadataAPIResponse) {
        option (google.api.http) = {
           post: "/v1.0/api/metadata/group"
        };
    }

    rpc getGroup (GroupMetadataAPIRequest) returns (Group) {
        option (google.api.http) = {
           get: "/v1.0/api/metadata/group"
        };
    }

    rpc updateGroup (GroupMetadataAPIRequest) returns (GroupMetadataAPIResponse) {
        option (google.api.http) = {
           put: "/v1.0/api/metadata/group"
        };
    }

    rpc deleteGroup (GroupMetadataAPIRequest) returns (GroupMetadataAPIResponse) {
        option (google.api.http) = {
           delete: "/v1.0/api/metadata/group"
        };
    }

    rpc createGroupMemberships (GroupMembershipAPIRequest) returns (GroupMetadataAPIResponse) {
        option (google.api.http) = {
           post: "/v1.0/api/metadata/user/group/memberships"
        };
    }

    rpc deleteGroupMemberships (GroupMembershipAPIRequest) returns (GroupMetadataAPIResponse) {
        option (google.api.http) = {
           delete: "/v1.0/api/metadata/user/group/memberships"
        };
    }

}